library(gitr)
Gqa("Initial commit.")
Gqa("Update github URL.")
# - {title: "CCI", align: left, href: "https://cci-dev.org"}
# - {title: "Defenders", align: left, href: "http://www.defenders.org"}
knitr::opts_chunk$set(echo = FALSE)
library(dplyr)
library(rio)
library(DT)
library(flexdashboard)
library(googleVis)
library(ggplot2)
library(ggthemes)
library(plotly)
library(shiny)
dat <- readRDS("states_es_laws.rds")
key <- readRDS("states_es_laws_key.rds")
cur_key <- reactive({
res <- data_frame(score=key$Score)
if(input$component == "total") {
res$score <- c("", "", "", "", "", "")
res$value <- c("Sum of component scores","","","","","")
} else {
res$value <- key[[input$component]]
}
res$message <- ifelse(
res$value != "" & !is.na(res$value),
paste0(res$score, " = ", res$value, ";"),
""
)
res
})
fluidRow(
column(
5,
p(style="font-size: 1.7em; font-weight: bold; margin-bottom: 0",
"State Endangered Species Laws"),
p(style="width:90%; font-size: 1.4rem; margin-bottom: 0",
"The strength of state laws protecting endangered species varies widely.")
),
column(1),
column(
2,
selectInput(
inputId = "component",
label = "Score component",
choices = c("Statute" = "statute",
"Plant & animal coverage" = "plant_animal_cov",
"Taxonomic level coverage" = "taxonomic_level_cov",
"Evidence" = "evidence",
"Citizen petition" = "citizen_petition",
"Recovery" = "recovery",
"Conserv. programs" = "conserv_programs",
"Critical habitat" = "critical_habitat",
"Private land use restrictions" = "private_land_restrictions",
"Substantive restrictions" = "substantive_restrictions",
"Consultation" = "consultation",
"Animal commerce restrictions" = "animal_commerce_restrictions",
"Animal take restrictions" = "animal_take_restrictions",
"Habitat modification is take" = "habitat_mod_take",
"Plant commerce restrictions" = "plant_commerce_restrictions",
"Plant take restrictions" = "plant_take_restrictions"),
selected = "statute",
multiple = TRUE,
width = "90%"
)
),
column(4,
helpText(renderText(paste(cur_key()$message, collapse = " ")))
)
)
cur_key <- reactive({
res <- data_frame(score=key$Score)
if(input$component == "total") {
res$score <- c("", "", "", "", "", "")
res$value <- c("Sum of component scores","","","","","")
} else {
res$value <- key[[input$component]]
}
res$message <- ifelse(
res$value != "" & !is.na(res$value),
paste0(res$score, " = ", res$value, ";"),
""
)
res
})
names(dat)
dat[[c("plant_animal_cov", taxonomic_level_cov")]]
d2 <- dat[[c("plant_animal_cov", "taxonomic_level_cov")]]
library(dplyr)
d2 <- select(dat, "plant_animal_cov", "taxonomic_level_cov")
d2 <- select(dat, plant_animal_cov, taxonomic_level_cov)
?select
?one_od
?one_of
d2$all <- rowSums(d2)
head(d2)
d2 <- select(dat, everything("statute"))
d2
d2 <- select(dat, everything("state"))
d2
View(dat)
d2 <- select(dat, everything(c("state")))
View(d2)
d2 <- select(dat, current_vars(c("state")))
d2 <- select(dat, current_vars())
d2 <- select_(dat, c("state"))
d2 <- select_(dat, c("statute"))
d2 <- select_(dat, c("statute", "evidence"))
d2 <- select_(dat, unquote("statute"), unquote("evidence"))
d2 <- select_(dat, quote("statute"), quote("evidence"))
View(d2)
d2 <- select_(dat, "statute", "evidence")
?map
?wuote
?quote
rio::export(dat, "states.xlsx")
dat <- rio::import("raw_data/states-tall.xlsx")
warnings()
View(dat)
warnings()
dat <- rio::import("raw_data/states-tall.xlsx")
sum(dat$value)
sum(dat$value, na.rm = TRUE
)
d2 <- filter(dat, variable %in% c("statute"))
d2 <- filter(dat, variable %in% c("statute", "evidence"))
library(gitr)
Gqa("Update to use tall data, multi-part select.")
?selectInput
?selectInput
View(key)
t(key)
k <- t(key)
names(k) <- k[1,]
View(k)
names(k)
k[1,]
names(k) <- k[1,]
nm <- paste(k[1,], "points")
nm
names(k) <- nm
is.data.frame(k)
k <- data_frame(k)
class(k)
k <- as_data_frame(k)
names(k) <- nm
readRDS("states_es_laws_key.rds")
key <- readRDS("states_es_laws_key.rds")
vars <- names(key)
k <- as_data_frame(t(key))
View(k)
k$variable <- vars
k <- select(k, variable, 1:6)
View(k)
names(k) <- c(
"variable",
"0 points",
"0.5 points",
"1 point",
"1.5 points",
"2 points",
"2.5 points",
"3 points"
)
names(k) <- c(
"variable",
"0 points",
"0.5 points",
"1 point",
"2 points",
"2.5 points",
"3 points"
)
k <- filter(k, variable != "Score")
abc <- readRDS("states_es_laws_key.rds")
saveRDS(k, "states_es_laws_key_tall.rds")
View(k)
k <- k[1:16, ]
saveRDS(k, "states_es_laws_key_tall.rds")
key <- k
Gqa("Small updates of text, layout of app.")
Gpush()
saveRDS(dat, "states_es_laws_tall.rds")
?checkboxGroupInput
?modalDialog
Gqa("Update how data selections are made, barchart is shown.")
Gpush()
Gstatus()
Gadd()
Gcommit("Change to index.Rmd for deploy.")
Gpush()
library(girr)
library(gitr)
Gqa("Update data table for fixed headers, etc.")
Gpush()
